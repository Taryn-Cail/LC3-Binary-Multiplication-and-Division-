;********************************************************
; Binary Division
;
; @author - Taryn Cail
; @version - 1.0
; @date - February 5th, 2025
;
; Purpose: To divide two numbers regardless if they're
;          positive, negative or both
;********************************************************

0011 0000 0000 0000 ;   Start at x3000

0101 010 010 1 00000 ;  Clear R2
0010 000 000010110;    Load x into R0 (PC offset + 22)
0010 011 000010101;    Load x into R3 (PC offset + 21)
0010 001 000010101;    Load y into R1 (PC offset + 21)
0010 100 000010100;    Load y into R4 (PC offset + 20)

0000 001 000001000; Branch to line two's complement if positive

; Perform division for negative numbers
0001 010 010 1 11111 ;  Add -1 to R2
0001 011 011 000 100 ;  R3 = R3 + R4
0000 011 111111101 ;    Branch up if positive or zero

; "Undo" one round for negative numbers
0001 010 010 1 00001 ;  R2 = R2 + 1 (quotient)

; Perform two's complement on R1 to get positive numbers
1001 001 001 1 11111 ; Not R1
0001 001 001 1 00001 ; Add 1

0001 011 011 000001 ;   R3 = R3 + R1 (remainder)

; Always branch past positive division to storing
0000 111 000000111 ; (PC offset +7)

; Perform two's complement on R4, this will be the decrementer
1001 100 100 111111 ;   Not R4
0001 100 100 1 00001 ;  Add 1

; Perform Division if Positive number
0001 010 010 1 00001 ;  Add 1 to R2
0001 011 011 000 100 ;  R3 = R3 + R4
0000 011 111111101 ;    Branch up if R3 is positive

; "Undo" one round for positive numbers
0001 010 010 1 11111 ;  R2 = R2 - 1
0001 011 011 000001 ;   R3 = R3 + R1

; Store Results
0011 010 000000100 ;    Store quotient
0011 011 000000100 ;    Store remainder

; End program
1111 0000 0010 0101 ;   Trap x25

; Variables
0000 0000 0110 0110 ;   x = 6
0000 0000 0001 1010 ;   y = 2
